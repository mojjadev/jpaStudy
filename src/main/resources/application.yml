server:
  port: 8080
spring:
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/mojja
    username: mjhan
    password: mjhan
    hikari:
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        useLocalSessionState: true
        rewriteBatchedStatements: true
        cacheResultSetMetadata: true
        cacheServerConfiguration: true
        elideSetAutoCommits: true
        maintainTimeStats: false
      maximum-pool-size: 20
      minimum-idle: 5
      pool-name: SpringBootJPAHikariCP
      idle-timeout: 600000
      max-lifetime: 25000
      connection-timeout: 30000

#ddl-auto
  #create : 기존테이블 삭제 후 다시 생성
  #update : 변경분만 반영
  #none : 사용하지 않음
# hibernate.show_sql=true 쿼리를 보여줌 로깅과 같이 쓸 경우 이중으로 노출
  jpa:
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    show-sql: false
    #spring.jpa.generate-ddl=true 옵션을 true로 설정하면 해당 데이터를 근거로 서버 시작 시점에 DDL문을 생성하여 DB에 적용한다.
    generate-ddl: true
    # sql 이쁘게 정렬해서
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect

logging:
  pattern:
    console: "%d %-5level %logger : %msg%n"
  level:
    org.springframework: info
    org.hibernate: debug